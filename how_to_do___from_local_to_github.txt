
WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday
$ git init
Initialized empty Git repository in C:/Users/WIN10/Desktop/Wednesday/.git/

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ touch demo1.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ ls
demo1.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ echo "Hear is the text what you had given" >> demo1.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ vim demo1.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ nano  demo1.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git add .
warning: in the working copy of 'demo1.txt', LF will be replaced b
y CRLF the next time Git touches it

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git commit -m "First commit"
[master (root-commit) f98bfcb] First commit
 1 file changed, 1 insertion(+)
 create mode 100644 demo1.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git status
On branch master
nothing to commit, working tree clean

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ touch demo5.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ vim demo5.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ echo "Hear we are giving the text message" >> demo5.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git reflog
f98bfcb (HEAD -> master) HEAD@{0}: commit (initial): First commit

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git add .
warning: in the working copy of 'demo5.txt', LF will be replaced b
y CRLF the next time Git touches it

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ ls
demo1.txt  demo2.txt  demo3.txt  demo4.txt  demo5.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git commit -m "Second commit"
[master 9d4cc7e] Second commit
 4 files changed, 1 insertion(+)
 create mode 100644 demo2.txt
 create mode 100644 demo3.txt
 create mode 100644 demo4.txt
 create mode 100644 demo5.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git status
On branch master
nothing to commit, working tree clean

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git reflog
9d4cc7e (HEAD -> master) HEAD@{0}: commit: Second commit
f98bfcb HEAD@{1}: commit (initial): First commit

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git reset --hard 9d4cc7e
HEAD is now at 9d4cc7e Second commit

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git reset --hard f98bfcb
HEAD is now at f98bfcb First commit

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git reflog
f98bfcb (HEAD -> master) HEAD@{0}: reset: moving to f98bfcb
9d4cc7e HEAD@{1}: reset: moving to 9d4cc7e
9d4cc7e HEAD@{2}: commit: Second commit
f98bfcb (HEAD -> master) HEAD@{3}: commit (initial): First commit

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git reflog
f98bfcb (HEAD -> master) HEAD@{0}: reset: moving to f98bfcb
9d4cc7e HEAD@{1}: reset: moving to 9d4cc7e
9d4cc7e HEAD@{2}: commit: Second commit
f98bfcb (HEAD -> master) HEAD@{3}: commit (initial): First commit

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (master)
$ git branch -M main

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git remote add main https://github.com/MahendarC/From_local_to_github.git

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git push -u origin main
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git push -u main main
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 249 bytes | 124.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/MahendarC/From_local_to_github.git
 * [new branch]      main -> main
branch 'main' set up to track 'main/main'.

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git status
On branch main
Your branch is up to date with 'main/main'.

nothing to commit, working tree clean

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ ls
demo1.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ touch demo2.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ ls
demo1.txt  demo2.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ vim demo2.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git add .

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git status
On branch main
Your branch is up to date with 'main/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   demo2.txt


WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ ls
demo1.txt  demo2.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git reflogg
git: 'reflogg' is not a git command. See 'git --help'.

The most similar command is
        reflog

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git reflog
f98bfcb (HEAD -> main, main/main) HEAD@{0}: Branch: renamed refs/h
eads/master to refs/heads/main
f98bfcb (HEAD -> main, main/main) HEAD@{2}: reset: moving to f98bf
cb
9d4cc7e HEAD@{3}: reset: moving to 9d4cc7e
9d4cc7e HEAD@{4}: commit: Second commit
f98bfcb (HEAD -> main, main/main) HEAD@{5}: commit (initial): Firs
t commit

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ exho "This is the demo2.txt file" >> demo2.txt
bash: exho: command not found

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ echoo "This is the demo2.txt file" >> demo2.txt
bash: echoo: command not found

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ echo "This is the demo2.txt file" >> demo2.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ ls
demo1.txt  demo2.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ nano demo2.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git add .
warning: in the working copy of 'demo2.txt', LF will be replaced b
y CRLF the next time Git touches it

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ ls
demo1.txt  demo2.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ touch demo3.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ ls
demo1.txt  demo2.txt  demo3.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git reflog
f98bfcb (HEAD -> main, main/main) HEAD@{0}: Branch: renamed refs/h
eads/master to refs/heads/main
f98bfcb (HEAD -> main, main/main) HEAD@{2}: reset: moving to f98bf
cb
9d4cc7e HEAD@{3}: reset: moving to 9d4cc7e
9d4cc7e HEAD@{4}: commit: Second commit
f98bfcb (HEAD -> main, main/main) HEAD@{5}: commit (initial): Firs
t commit

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git commit -m "Third commit"
[main 36936ac] Third commit
 1 file changed, 1 insertion(+)
 create mode 100644 demo2.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git status
On branch main
Your branch is ahead of 'main/main' by 1 commit.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        demo3.txt

nothing added to commit but untracked files present (use "git add"
 to track)

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git push
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 293 bytes | 293.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/MahendarC/From_local_to_github.git
   f98bfcb..36936ac  main -> main

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ ls
demo1.txt  demo2.txt  demo3.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ echo "This is the demo3.txt" >> demo3.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ nano demo3.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ nano demo2.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ echo "I had updated demo1.txt" >> demo1.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ nano demo1.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git add  .
warning: in the working copy of 'demo1.txt', LF will be replaced b
y CRLF the next time Git touches it
warning: in the working copy of 'demo3.txt', LF will be replaced b
y CRLF the next time Git touches it

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git reflog
36936ac (HEAD -> main, main/main) HEAD@{0}: commit: Third commit
f98bfcb HEAD@{1}: Branch: renamed refs/heads/master to refs/heads/
main
f98bfcb HEAD@{3}: reset: moving to f98bfcb
9d4cc7e HEAD@{4}: reset: moving to 9d4cc7e
9d4cc7e HEAD@{5}: commit: Second commit
f98bfcb HEAD@{6}: commit (initial): First commit

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git commit -m "Fourth commit"

[main e7dba50] Fourth commit
 2 files changed, 2 insertions(+)
 create mode 100644 demo3.txt

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$

WIN10@DESKTOP-C1PK23Q MINGW64 ~/Desktop/Wednesday (main)
$ git push
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 383 bytes | 383.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/MahendarC/From_local_to_github.git
   36936ac..e7dba50  main -> main










git init
touch demo1.txt
ls
echo "Some message" >>  demo1.txt     ->for writing the text into the file  
vim demo1.txt                         ->to view the file
nano demo1.txt                        ->for appending text into the file
git add . 
git status
git commit -m "first commit"
git reflog                           ->it displays the id for the above files
git reset --hard 899bbc1             ->899bbc1 its the ID 
git revert                           -> to go back to the back to the previous file
git branch -M main
git remote add origin  https:\\github.com\MahendarC\From_local_to_github.git
git push -u origin main